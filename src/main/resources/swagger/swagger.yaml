---
openapi: "3.0.0"

info:
  title: "Employee Management Application API"
  version: 0.0.1-SNAPSHOT

tags:
  - name: Auth
  - name: Service
  - name: Users

paths:

  ##################################################
  # Auth API
  ##################################################

  /api/v1/auth/signup:
    post:
      operationId: signUp
      summary: Sing up a new user
      security:
        - bearerAuth: []
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  ##################################################
  # Service API
  ##################################################

  /api/v1/health:
    get:
      operationId: healthCheck
      summary: Provide health check
      tags:
        - Service
      responses:
        "200":
          description: OK

  ##################################################
  # Users API
  ##################################################

components:

  schemas:

    Error:
      properties:
        title:
          type: string
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string

    SignUpRequest:
      required:
        - firstName
        - lastName
        - email
        - role
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        title:
          type: string
        role:
          type: string

    Token:
      properties:
        issuedAt:
          type: integer
          format: int64
        accessToken:
          type: string
        accessExpiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
        refreshExpiresIn:
          type: integer
          format: int64

    User:
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        title:
          type: string
        role:
          $ref: "#/components/schemas/UserRole"
        createdAt:
          type: string
          format: "date-time"
        updatedAt:
          type: string
          format: "date-time"

    UserRole:
      type: string
      enum:
        - "DEVELOPER"
        - "MANAGER"
        - "ADMIN"

  responses:

    BadRequest:
      description: Request params or body validation failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Forbidden:
      description: Wrong permission to access this resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    NotFound:
      description: Resource could not be found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    ServiceUnavailable:
      description: Remote web server is temporarily unable to handle a request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Unauthorized:
      description: Missing authorization information
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
